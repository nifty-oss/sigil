/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import {
  Codec,
  Decoder,
  Encoder,
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getStringDecoder,
  getStringEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getU8Decoder,
  getU8Encoder,
} from '@solana/codecs';

export type Node = { pointer: Array<number>; ticker: string; amount: number };

export type NodeArgs = Node;

export function getNodeEncoder(): Encoder<NodeArgs> {
  return getStructEncoder([
    ['pointer', getArrayEncoder(getU8Encoder(), { size: 4 })],
    ['ticker', getStringEncoder({ size: 4 })],
    ['amount', getU32Encoder()],
  ]);
}

export function getNodeDecoder(): Decoder<Node> {
  return getStructDecoder([
    ['pointer', getArrayDecoder(getU8Decoder(), { size: 4 })],
    ['ticker', getStringDecoder({ size: 4 })],
    ['amount', getU32Decoder()],
  ]);
}

export function getNodeCodec(): Codec<NodeArgs, Node> {
  return combineCodec(getNodeEncoder(), getNodeDecoder());
}
