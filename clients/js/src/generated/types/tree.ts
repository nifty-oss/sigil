/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import {
  Codec,
  Decoder,
  Encoder,
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getStructDecoder,
  getStructEncoder,
  getU8Decoder,
  getU8Encoder,
} from '@solana/codecs';
import { Node, NodeArgs, getNodeDecoder, getNodeEncoder } from '.';

export type Tree = { allocator: Array<number>; nodes: Array<Node> };

export type TreeArgs = { allocator: Array<number>; nodes: Array<NodeArgs> };

export function getTreeEncoder(): Encoder<TreeArgs> {
  return getStructEncoder([
    ['allocator', getArrayEncoder(getU8Encoder(), { size: 8 })],
    ['nodes', getArrayEncoder(getNodeEncoder(), { size: 'remainder' })],
  ]);
}

export function getTreeDecoder(): Decoder<Tree> {
  return getStructDecoder([
    ['allocator', getArrayDecoder(getU8Decoder(), { size: 8 })],
    ['nodes', getArrayDecoder(getNodeDecoder(), { size: 'remainder' })],
  ]);
}

export function getTreeCodec(): Codec<TreeArgs, Tree> {
  return combineCodec(getTreeEncoder(), getTreeDecoder());
}
